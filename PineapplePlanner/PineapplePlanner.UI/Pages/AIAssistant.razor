@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PineapplePlanner.AI.Services
@using PineapplePlanner.Application.Interfaces
@using PineapplePlanner.UI.Services

@page "/ai-assistant"

@attribute [Authorize]

@inject FirebaseAuthenticationService _authService
@inject AuthenticationStateProvider _authStateProvider
@inject AIService _aiService
@inject ITaskRepository _taskRepository

<MudPaper Class="pa-4 ma-2" Elevation="25" Width="100%">
    <div class="ai-assistant">
        <MudImage ObjectFit=@ObjectFit.Contain
                  Height="128"
                  Width="128"
                  Src="../images/pineapple_planner_logo.svg"
                  Alt="Pineapple Planner"
                  Elevation="0" />
        <MudText Typo=@Typo.h6>Let the Pineapple plan for you!</MudText>
        <div class="prompt">
            @if (_promptResult.Data == null)
            {
                <MudTextField T=@string
                              @bind-Value=@_prompt
                              Placeholder=@(GetRandomPromptPlaceholderString())
                              Variant=@Variant.Outlined
                              FullWidth
                              MaxLength="200"
                              AdornmentIcon=@Icons.Material.Rounded.AutoAwesome
                              AdornmentColor=@Color.Primary
                              OnAdornmentClick=@HandleSubmitPrompt
                              ShrinkLabel
                              Immediate
                              OnKeyDown=HandlePromptKeyDown
                              Disabled=@_isGeneratingTask
                              Adornment=@Adornment.End
                              Margin=@Margin.Dense />
            }
            else
            {
                <MudText Align=@Align.Center>
                    Task created, <MudLink Href="/tasks">Jump!</MudLink>
                </MudText>
            }
            @if (_promptResult.Errors.Any())
            {
                <MudText Align=@Align.Center>@string.Join(", ", _promptResult.Errors)</MudText>
            }
            @if (_isGeneratingTask)
            {
                <MudProgressLinear Color=@Color.Primary Indeterminate />
            }
        </div>
    </div>
</MudPaper>
