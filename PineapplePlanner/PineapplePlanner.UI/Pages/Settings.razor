@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PineapplePlanner.Application.Interfaces
@using PineapplePlanner.UI.Services

@page "/settings"

@attribute [Authorize]

@inject IUserRepository _userRepository
@inject FirebaseAuthenticationService _authService
@inject AuthenticationStateProvider _authStateProvider

<div class="settings">
    @if (_userResult.Data != null)
    {
        <MudPaper Elevation="25" Style="width: 100%; height: 100%; display: flex; flex-direction: column;">
            <div class="settings__content">
                <MudTabs Rounded @bind-ActivePanelIndex=@_activeTabIndex>
                    <MudTabPanel Text="Profile" ID=@("profile") Icon=@Icons.Material.Rounded.Person>
                        <div class="profile">
                            <MudTextField @bind-Value=@_user.Username Label="Username" Variant=@Variant.Outlined Margin=@Margin.Dense MaxLength="20" />
                        </div>
                    </MudTabPanel>
                    <MudTabPanel Text="Appearance" ID=@("appearance") Icon=@Icons.Material.Rounded.Laptop>
                        <div class="appearance">
                            <MudSwitch @bind-Value=@_user.IsDarkMode T=@bool Label="Dark Mode" />
                        </div>
                    </MudTabPanel>
                </MudTabs>
            </div>
            <MudDivider />
            <div class="actions">
                <MudButton OnClick=@HandleSave
                           Color=@Color.Surface
                           Variant=@Variant.Outlined>Save</MudButton>
            </div>
        </MudPaper>
    }
    else if (_userResult.Errors.Any())
    {
        @foreach (string error in _userResult.Errors)
        {
            <div>@error</div>
        }
    }
    else
    {
        <MudProgressLinear Color=@Color.Primary Indeterminate />
    }
</div>
