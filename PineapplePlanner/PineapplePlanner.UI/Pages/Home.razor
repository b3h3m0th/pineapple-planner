@using MediatR
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PineapplePlanner.Application.Interfaces
@using PineapplePlanner.Domain.Entities
@using PineapplePlanner.UI.Components
@using PineapplePlanner.UI.Layouts
@using PineapplePlanner.UI.Providers
@using PineapplePlanner.UI.Services

@page "/"

@attribute [Authorize]

@inject IEntryRepository _taskRepository
@inject LocalizationService _localize
@inject AuthenticationStateProvider _authStateProvider

<div class="home">
    <div class="modifiers">
        <MudPaper Class="pa-2" Elevation="25">
            <MudSelect T=@TaskFilterOption
                       AdornmentIcon=@Icons.Material.Rounded.FilterAlt
                       Adornment=@Adornment.Start
                       Value="@_selectedFilterOption"
                       ValueChanged="@HandleFilterChange"
                       Label=@_localize["Filter"]
                       Dense
                       AnchorOrigin="Origin.BottomLeft"
                       Margin="Margin.Dense"
                       TransformOrigin=@Origin.BottomLeft
                       Variant="Variant.Outlined">
                <MudSelectItem Value="@TaskFilterOption.All">All</MudSelectItem>
                <MudSelectItem Value="@TaskFilterOption.Active">Active</MudSelectItem>
                <MudSelectItem Value="@TaskFilterOption.Completed">Completed</MudSelectItem>
            </MudSelect>
        </MudPaper>
    </div>
    <div class="tasks-list">
        @if (_tasksResult.Data != null)
        {
            @if (_filteredTasks.Any())
            {
                @foreach (Domain.Entities.Task task in _filteredTasks)
                {
                    <TaskItem Task=@task OnClick=@HandleEditTask OnCompleteChange=@HandleTaskCompleteChange />
                }
            }
            else
            {
                <div class="no-entries">
                    <MudPaper Class="pa-6" Elevation="0">
                        @if (_tasksResult.Data.Any())
                        {
                            <MudText Typo="Typo.body1" Align="Align.Center">@_localize["No tasks match the selected filters."]</MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-4">@_localize["You don't have any tasks yet."]</MudText>
                            <div class="d-flex justify-center">
                                <MudButton Variant=@Variant.Filled
                                           Color=@Color.Primary
                                           StartIcon=@Icons.Material.Rounded.Add
                                           OnClick=@HandleCreateTask>
                                    Create your first task
                                </MudButton>
                            </div>
                        }
                    </MudPaper>
                </div>
            }
        }
        else if (_tasksResult.Errors.Any())
        {
            @foreach (string error in _tasksResult.Errors)
            {
                <MudAlert Severity="Severity.Error" Class="my-2">@error</MudAlert>
            }
        }
        else
        {
            <MudProgressLinear Color=@Color.Primary Indeterminate />
        }
    </div>
</div>
