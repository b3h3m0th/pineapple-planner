@using MediatR
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PineapplePlanner.Application.Interfaces
@using PineapplePlanner.Domain.Entities
@using PineapplePlanner.UI.Components
@using PineapplePlanner.UI.Layouts
@using PineapplePlanner.UI.Providers

@page "/"

@attribute [Authorize]

@inject ITaskRepository _taskRepository
@inject AuthenticationStateProvider _authStateProvider

<div class="home">
    <div class="tasks-list">
        @if (_tasksResult.Data != null)
        {
            @foreach (Domain.Entities.Task task in (_tasksResult.Data ?? new()).OrderByDescending(t => t.CompletedAt == null).ThenBy(t => t.CreatedAt))
            {
                <TaskItem Task=@task OnClick=@HandleEditTask OnCompleteChange=@HandleTaskCompleteChange />
            }
        }
        @*Catch an error*@
        else if (_tasksResult.Errors.Any())
        {
            @foreach (string error in _tasksResult.Errors)
            {
                <div>@error</div>
            }
        }
        else
        {
            <MudProgressLinear Color=@Color.Primary Indeterminate />
        }
    </div>
</div>
