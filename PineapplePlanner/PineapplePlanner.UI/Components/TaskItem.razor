@using PineapplePlanner.Domain.Entities
@using PineapplePlanner.UI.Localization
@using PineapplePlanner.UI.Services

@inject LocalizationService _localize

<MudPaper Class="pa-4 ma-2 flex" Style=@($"opacity: {(IsCompleted ? ".5" : "1")}") Elevation="25">
    <div class="completed">
        <MudCheckBox Value=@(Task.CompletedAt != null) Color=@Color.Surface T=@bool @oninput=@HandleCompleteChange />
    </div>
    <div class="content" @onclick=@HandleOnClick>
        @if (Task.Priority != Domain.Enums.Priority.None && Task.Priority != null)
        {
            <span class="priority">
                @if (Task.Priority is Domain.Enums.Priority priority)
                {
                    <MudChip T=@string Color=@PriorityColor Size=@Size.Small Variant=@Variant.Text>
                        @_localize[priority.ToString()]
                    </MudChip>
                }
            </span>
        }
        <MudText Typo="Typo.h6" Style=@($"text-decoration: {(IsCompleted ?"line-through" : "none")}")>
            @Task.Name
        </MudText>
        <MudText Typo="Typo.body2" Style=@($"text-decoration: {(IsCompleted ?"line-through" : "none")}")>
            @Task.Description
        </MudText>
        <MudDivider Class="my-2"></MudDivider>
        <div class="subinfos">
            <div class="date">
                <MudIcon Icon=@Icons.Material.Rounded.CalendarToday Color=@Color.Surface Size=@Size.Small />
                <span>
                    <MudText Typo=@Typo.body2>
                        @{
                            var culture = new CultureInfo(AuthenticatedLayout?.User?.Culture ?? Culture.English);
                            string dateStr = "";
                            if (Task.DateDue.HasValue)
                            {
                                string dayName = culture.DateTimeFormat.GetAbbreviatedDayName(Task.DateDue.Value.DayOfWeek);
                                string datePart = Task.DateDue.Value.ToString(culture.DateTimeFormat.ShortDatePattern, culture);
                                datePart = datePart.Replace('/', '.').Replace('-', '.').Replace(' ', '.');
                                string timePart = Task.DateDue.Value.ToString(culture.DateTimeFormat.ShortTimePattern, culture);
                                dateStr = $"{dayName}, {datePart} {timePart}";
                            }
                        }
                        @dateStr
                    </MudText>
                </span>
            </div>
            <div class="tags">
                @foreach (Tag tag in Task.Tags)
                {
                    <MudChip T=@string Color=@Color.Default Size=@Size.Small Variant=@Variant.Text Label=@true>
                        #@tag.Name
                    </MudChip>
                }
            </div>
        </div>
    </div>
</MudPaper>