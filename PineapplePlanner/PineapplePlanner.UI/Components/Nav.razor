@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using PineapplePlanner.UI.Services

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject FirebaseAuthenticationService _authenticationService

<nav>
    <ul>
        <NavLink href="/">
            <li class="logo">
                <img src="https://ih1.redbubble.net/image.1016237361.5288/flat,750x,075,f-pad,750x1000,f8f8f8.jpg"
                     alt="Pineapple planner"
                     width="75"
                     height="75"
                     style="object-fit: cover; object-position: center;">
            </li>
        </NavLink>
        <NavLink href="/">
            <li>
                <button>Overview</button>
            </li>
        </NavLink>
        <NavLink href="/tasks">
            <li>
                <button>Tasks</button>
                
            </li>
        </NavLink>
        <NavLink href="/calendar">
            <li>
                <button>Calendar</button>
                
            </li>
        </NavLink>
        <li class="separator">
            <hr />
        </li>
        <NavLink href="/settings">
            <li>
                <button>Settings</button>
            
            </li>
        </NavLink>
        @if (_authenticationState?.User.Identity?.IsAuthenticated == true)
        {
            <li>
                Hello, @_authenticationState.User.FindFirst(ClaimTypes.Email)?.Value !<br />
                <button><a href="/" @onclick=@HandleLogout>Log out</a></button>
            </li>
        }
    </ul>
</nav>