@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using PineapplePlanner.UI.Services

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject FirebaseAuthenticationService _authenticationService

<nav>
    <ul>
        <NavLink href="/">
            <li class="logo">
                <div>Pineapple Planner</div>
            </li>
        </NavLink>
        <NavLink href="/">
            <li>
                <MudIcon Icon=@Icons.Material.Rounded.Task Title="Task" />
                Tasks
            </li>
        </NavLink>
        <NavLink href="/calendar">
            <li>
                <MudIcon Icon=@Icons.Material.Rounded.CalendarMonth Title="Calendar" />
                Calendar
            </li>
        </NavLink>
        <li class="separator">
            <hr />
        </li>
        <NavLink href="/settings">
            <li>
                <MudIcon Icon=@Icons.Material.Rounded.Settings Title="Settings" />
                Settings
            </li>
        </NavLink>
        <li class="create-task">
            <MudFab Color=Color.Surface StartIcon=@Icons.Material.Filled.Add OnClick=@HandleCreateTask />
            <span>New task</span>
        </li>
        @if (_authenticationState?.User.Identity?.IsAuthenticated == true)
        {
            <li class="profile">
                @_authenticationState.User.FindFirst(ClaimTypes.Email)?.Value
                <a href="/" @onclick=@HandleLogout>
                    <MudIcon Icon=@Icons.Material.Rounded.Logout Title="Logout" />
                </a>
            </li>
        }
        else
        {
            <NavLink href="/login">
                <li>
                    Login
                </li>
            </NavLink>
        }
    </ul>
</nav>