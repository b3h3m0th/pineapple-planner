@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using PineapplePlanner.UI.Services

@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject FirebaseAuthenticationService _authenticationService

<MudPaper Width="250px" Class="py-3" Elevation="25">
    <MudNavMenu Rounded="true" Margin="Margin.Normal" Color=@Color.Surface Class="pa-2">
        <MudText Typo="Typo.h6" Class="px-4">Pineapple Planner</MudText>
        <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Plan your tasks</MudText>
        <MudDivider Class="my-2" />
        <MudNavLink Match=@NavLinkMatch.All Href="/" Icon=@Icons.Material.Rounded.Task>Tasks</MudNavLink>
        <MudNavLink Match=@NavLinkMatch.All Href="/calendar" Icon=@Icons.Material.Rounded.CalendarMonth>Calendar</MudNavLink>
        <MudNavLink Match=@NavLinkMatch.All Href="/settings" Icon=@Icons.Material.Rounded.Settings>Settings</MudNavLink>
        <div class="create-task">
            <MudFab Color=Color.Surface StartIcon=@Icons.Material.Filled.Add OnClick=@HandleCreateTask />
            <span>New task</span>
        </div>
        @if (_authenticationState?.User.Identity?.IsAuthenticated == true)
        {
            <MudNavGroup Icon=@Icons.Material.Rounded.AccountCircle Title=@_authenticationState.User.FindFirst(ClaimTypes.Email)?.Value Expanded="true">
                <MudNavLink Icon=@Icons.Material.Rounded.Logout @onclick=@HandleLogout>Logout</MudNavLink>
            </MudNavGroup>
        }
        else
        {
            <NavLink href="/login">
                <li>
                    Login
                </li>
            </NavLink>
        }
    </MudNavMenu>
</MudPaper>
